service:
  name: setelac-aws-services
  publish: false # disable auto-publishing to the Serverless platform

plugins:
  - serverless-appsync-plugin
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "Fn::GetAtt": [ OrdersTable, Arn ]

functions:
  graphql:
    handler: handler.graphqlHandler
  testOrders:
    handler: handler.dynamoHandler

custom:
  accountId: 833201972695
  appSync:
    name: Servicios Tecnicos SETELAC
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: us-east-1
      defaultAction: ALLOW
      userPoolId: us-east-1_NoHqFSxNu
    # region: # defaults to provider region
    # mappingTemplatesLocation: # defaults to mapping-templates
    mappingTemplates:
      - dataSource: Lambda
        type: Mutation
        field: addOrder
        request: "addOrder-request-mapping-template.vtl"
        response: "addOrder-response-mapping-template.vtl"
    # schema: # defaults schema.graphql
    serviceRole: "AppSyncServiceRole"
    dataSources:
      - type: AWS_LAMBDA
        name: Lambda
        description: 'Lambda DataSource'
        config:
          lambdaFunctionArn: { Fn::GetAtt: [GraphqlLambdaFunction, Arn] }
          serviceRoleArn: { Fn::GetAtt: [AppSyncLambdaServiceRole, Arn] }
  serverless-offline:
    port: 4000

resources:
  Resources:
    OrdersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          -
            AttributeName: orderId
            KeyType: HASH
          -
            AttributeName: timeSubmitted
            KeyType: RANGE    
        AttributeDefinitions:
          -
            AttributeName: orderId
            AttributeType: S
          -
            AttributeName: timeSubmitted
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Orders'
    AppSyncLambdaServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "Lambda-${self:custom.appSync.serviceRole}"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          -
            PolicyName: "Lambda-${self:custom.appSync.serviceRole}-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "lambda:invokeFunction"
                  Resource:
                    - "arn:aws:lambda:us-east-1:${self:custom.accountId}:function:${self:service}-${self:provider.stage}-graphql"
                    - "arn:aws:lambda:us-east-1:${self:custom.accountId}:function:${self:service}-${self:provider.stage}-graphql:*"